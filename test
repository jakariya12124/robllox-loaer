-- Valex-Style Fly with Auto-Reactivate After Death

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- Settings
local speed = 50
local gravityPull = -8

-- Variables
local flying = false -- remembers fly state
local bv, bg, humanoid, root

-- GUI Setup
local gui = Instance.new("ScreenGui")
gui.Name = "ValexFlyGUI"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 130, 0, 50)
frame.Position = UDim2.new(0.5, -65, 0.75, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BackgroundTransparency = 0.2
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = gui

local button = Instance.new("TextButton")
button.Size = UDim2.new(1, 0, 1, 0)
button.Text = "Fly: OFF"
button.TextColor3 = Color3.new(1, 1, 1)
button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
button.Font = Enum.Font.GothamBold
button.TextScaled = true
button.Parent = frame

-- Functions to start/stop flying
local function startFlying()
	if not root or not humanoid then return end
	if not bv or not bv.Parent then
		bv = Instance.new("BodyVelocity")
		bv.MaxForce = Vector3.new(1e6, 1e6, 1e6)
		bv.P = 125000
		bv.Name = "FlyVelocity"
		bv.Velocity = Vector3.zero
		bv.Parent = root
	end

	if not bg or not bg.Parent then
		bg = Instance.new("BodyGyro")
		bg.MaxTorque = Vector3.new(1e6, 1e6, 1e6)
		bg.P = 50000
		bg.CFrame = workspace.CurrentCamera.CFrame
		bg.Name = "FlyGyro"
		bg.Parent = root
	end

	humanoid.PlatformStand = true
end

local function stopFlying()
	if bv then bv:Destroy() end
	if bg then bg:Destroy() end
	bv, bg = nil, nil
	if humanoid then humanoid.PlatformStand = false end
end

-- Toggle button clicked
button.MouseButton1Click:Connect(function()
	flying = not flying
	button.Text = "Fly: " .. (flying and "ON" or "OFF")

	if flying then
		startFlying()
	else
		stopFlying()
	end
end)

-- Main fly logic loop
RunService.RenderStepped:Connect(function()
	if flying and humanoid and root and bv and bg then
		local cam = workspace.CurrentCamera
		local move = humanoid.MoveDirection
		bg.CFrame = cam.CFrame

		local velocity = Vector3.zero
		if move.Magnitude > 0 then
			local dir = cam.CFrame:VectorToWorldSpace(move.Unit)
			velocity = dir * speed
		end

		-- Gravity pull always applied
		velocity = velocity + Vector3.new(0, gravityPull, 0)
		bv.Velocity = velocity
	end
end)

-- Setup character references and handle respawn
local function setupCharacter(char)
	humanoid = char:WaitForChild("Humanoid")
	root = char:WaitForChild("HumanoidRootPart")

	-- Reapply flying if was on before death
	if flying then
		task.wait(0.1) -- wait a bit for physics to settle
		startFlying()
	end
end

-- On character respawn
player.CharacterAdded:Connect(function(char)
	stopFlying() -- clear old forces just in case
	setupCharacter(char)
end)

-- Initial setup if character already loaded
if player.Character then
	setupCharacter(player.Character)
end
