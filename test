--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

--// GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "FlyGui"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 130, 0, 50)
frame.Position = UDim2.new(0.5, -65, 0.75, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BackgroundTransparency = 0.2
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local button = Instance.new("TextButton", frame)
button.Size = UDim2.new(1, 0, 1, 0)
button.Text = "Fly: OFF"
button.TextColor3 = Color3.new(1, 1, 1)
button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
button.Font = Enum.Font.GothamBold
button.TextScaled = true

--// Fly Logic
local flying = false
local bv, bg
local speed = 50

button.MouseButton1Click:Connect(function()
	flying = not flying
	button.Text = "Fly: " .. (flying and "ON" or "OFF")

	if flying then
		-- Add BodyVelocity
		bv = Instance.new("BodyVelocity")
		bv.MaxForce = Vector3.new(1e6, 1e6, 1e6) -- High force to block gravity
		bv.Velocity = Vector3.zero
		bv.P = 125000
		bv.Name = "FlyVelocity"
		bv.Parent = humanoidRootPart

		-- Add BodyGyro
		bg = Instance.new("BodyGyro")
		bg.MaxTorque = Vector3.new(1e6, 1e6, 1e6)
		bg.CFrame = workspace.CurrentCamera.CFrame
		bg.P = 50000
		bg.Name = "FlyGyro"
		bg.Parent = humanoidRootPart

		humanoid.PlatformStand = true
	else
		if bv then bv:Destroy() end
		if bg then bg:Destroy() end
		humanoid.PlatformStand = false
	end
end)

--// Flight Movement Update
RunService.RenderStepped:Connect(function()
	if flying and bv and bg and humanoidRootPart then
		local moveDir = humanoid.MoveDirection
		local cam = workspace.CurrentCamera

		bg.CFrame = cam.CFrame

		if moveDir.Magnitude > 0 then
			local dir = cam.CFrame:VectorToWorldSpace(moveDir.Unit)
			bv.Velocity = dir * speed + Vector3.new(0, 1, 0) -- Add upward float
		else
			bv.Velocity = Vector3.new(0, 1, 0.1) -- Constant gentle float to stop micro fall
		end
	end
end)
