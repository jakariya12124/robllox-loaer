--// Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

--// GUI
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "MobileFlyGui"
screenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 120, 0, 50)
mainFrame.Position = UDim2.new(0.5, -60, 0.7, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BackgroundTransparency = 0.2
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true

local flyButton = Instance.new("TextButton", mainFrame)
flyButton.Size = UDim2.new(1, 0, 1, 0)
flyButton.Text = "Fly: OFF"
flyButton.TextColor3 = Color3.new(1, 1, 1)
flyButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
flyButton.Font = Enum.Font.GothamBold
flyButton.TextScaled = true

--// Fly Logic
local flying = false
local bv = nil
local speed = 50

local moveDirection = Vector3.zero

-- Update movement input for mobile or PC
UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.W then moveDirection = Vector3.new(0, 0, -1) end
	if input.KeyCode == Enum.KeyCode.S then moveDirection = Vector3.new(0, 0, 1) end
	if input.KeyCode == Enum.KeyCode.A then moveDirection = Vector3.new(-1, 0, 0) end
	if input.KeyCode == Enum.KeyCode.D then moveDirection = Vector3.new(1, 0, 0) end
end)

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Keyboard then
		moveDirection = Vector3.zero
	end
end)

--// Fly Toggle
flyButton.MouseButton1Click:Connect(function()
	flying = not flying
	flyButton.Text = "Fly: " .. (flying and "ON" or "OFF")

	if flying then
		-- Create BodyVelocity
		bv = Instance.new("BodyVelocity")
		bv.Velocity = Vector3.zero
		bv.MaxForce = Vector3.new(1e5, 1e5, 1e5)
		bv.P = 12500
		bv.Parent = humanoidRootPart
	else
		if bv then
			bv:Destroy()
			bv = nil
		end
	end
end)

--// Movement update
RunService.RenderStepped:Connect(function()
	if flying and bv and character and humanoidRootPart then
		local cam = workspace.CurrentCamera
		local cf = cam.CFrame
		local direction = cf:VectorToWorldSpace(moveDirection)
		bv.Velocity = direction * speed
	end
end)
